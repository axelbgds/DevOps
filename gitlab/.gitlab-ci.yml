variables:
  CONTAINER_IP: ${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_PATH_SLUG}-${CI_PIPELINE_ID}
  PROJECT_NAME: axel-beaugrand-website
  LAB_DOMAIN: axelbeaugrand.labs.com  
  API_PORT: "2024"
  API_URL: ${CONTAINER_IP}-${API_PORT}.${LAB_DOMAIN}
  CONTAINER_PORT: 8080
  STAGING_PORT: 9090
  PRODUCTION_PORT: 80
  REVIEW_PORT: 7070
  TEST_PORT: 6060
  DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}

image: docker:20.10

services:
  - docker:20.10-dind

stages:
  - build
  - test
  - release
  - deploy
  - validate

.docker_login: &docker_login
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY

build:
  stage: build
  <<: *docker_login
  script:
    - docker build -t ${PROJECT_NAME} .
    - docker tag ${PROJECT_NAME} ${DOCKER_IMAGE}
    - docker push ${DOCKER_IMAGE}

test:
  stage: test
  script:
    - docker pull ${DOCKER_IMAGE}
    - docker run -d -p ${TEST_PORT}:${CONTAINER_PORT} --name ${PROJECT_NAME}_test ${DOCKER_IMAGE}
    - apk add --no-cache curl
    - sleep 10
    - curl -s "http://localhost:${TEST_PORT}" | grep -q "Dimension" || exit 1

release:
  stage: release
  <<: *docker_login
  script:
    - docker pull ${DOCKER_IMAGE}
    - docker tag ${DOCKER_IMAGE} ${CI_REGISTRY_IMAGE}:latest
    - docker push ${CI_REGISTRY_IMAGE}:latest

.deploy_template: &deploy
  script:
    - apk add --no-cache curl
    - |
      curl -X POST "http://${API_URL}/${CI_ENVIRONMENT_SLUG}" \
        -H "Content-Type: application/json" \
        -d "{
          \"project\": \"${PROJECT_NAME}\",
          \"image\": \"${DOCKER_IMAGE}\",
          \"port\": \"${DEPLOY_PORT}\",
          \"internal_port\": \"${CONTAINER_PORT}\"
        }" | grep -q "200 OK" || exit 1

deploy_review:
  stage: deploy
  <<: *deploy
  variables:
    DEPLOY_PORT: ${REVIEW_PORT}
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    url: http://${CONTAINER_IP}-${REVIEW_PORT}.${LAB_DOMAIN}
    on_stop: stop_review
  only:
    - merge_requests

stop_review:
  stage: deploy
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: stop
  variables:
    GIT_STRATEGY: none
  script:
    - apk add --no-cache curl
    - |
      curl -X DELETE "http://${API_URL}/review" \
        -H "Content-Type: application/json" \
        -d "{\"project\": \"${PROJECT_NAME}\"}"
  only:
    - merge_requests
  when: manual

deploy_staging:
  stage: deploy
  <<: *deploy
  variables:
    DEPLOY_PORT: ${STAGING_PORT}
  environment:
    name: staging
    url: http://${CONTAINER_IP}-${STAGING_PORT}.${LAB_DOMAIN}

deploy_production:
  stage: deploy
  <<: *deploy
  variables:
    DEPLOY_PORT: ${PRODUCTION_PORT}
  environment:
    name: production
    url: http://${CONTAINER_IP}-${PRODUCTION_PORT}.${LAB_DOMAIN}
  only:
    - main

.validate_template: &validate
  stage: validate
  script:
    - apk add --no-cache curl
    - |
      curl -s "http://${DEPLOY_URL}" | grep -q "Dimension" || exit 1

validate_staging:
  <<: *validate
  variables:
    DEPLOY_URL: ${CONTAINER_IP}-${STAGING_PORT}.${LAB_DOMAIN}

validate_production:
  <<: *validate
  variables:
    DEPLOY_URL: ${CONTAINER_IP}-${PRODUCTION_PORT}.${LAB_DOMAIN}
  only:
    - main